# detect build type and build folder
message("CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
message("CMAKE_CURRENT_SOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR}")
message("CMAKE_CURRENT_BINARY_DIR=${CMAKE_CURRENT_BINARY_DIR}")
if(NOT CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_CONFIGURATION_TYPES Debug Release MinSizeRel RelWithDebInfo)
endif()
message("CMAKE_CONFIGURATION_TYPES=${CMAKE_CONFIGURATION_TYPES}")
list(JOIN CMAKE_CONFIGURATION_TYPES "|" SUPPORTED_BUILD_TYPES)
message("SUPPORTED_BUILD_TYPES=${SUPPORTED_BUILD_TYPES}")
string(REGEX MATCH "(${SUPPORTED_BUILD_TYPES})$" DETECTED_BUILD_FOLDER ${CMAKE_CURRENT_BINARY_DIR})
message("DETECTED_BUILD_FOLDER=${DETECTED_BUILD_FOLDER}")
if(NOT DETECTED_BUILD_FOLDER IN_LIST CMAKE_CONFIGURATION_TYPES)
    message(FATAL_ERROR "DETECTED_BUILD_FOLDER (${DETECTED_BUILD_FOLDER}) must be in one of the CMAKE_CONFIGURATION_TYPES (${CMAKE_CONFIGURATION_TYPES})")
endif()
if(CMAKE_BUILD_TYPE)
    if(NOT DETECTED_BUILD_FOLDER STREQUAL CMAKE_BUILD_TYPE)
        message(FATAL_ERROR "DETECTED_BUILD_FOLDER (${DETECTED_BUILD_FOLDER}) must be same as CMAKE_BUILD_TYPE (${CMAKE_BUILD_TYPE})")
    endif()
    set(DETECTED_BUILD_TYPE ${CMAKE_BUILD_TYPE})
    message("CMAKE_BUILD_TYPE found, DETECTED_BUILD_TYPE=CMAKE_BUILD_TYPE=${DETECTED_BUILD_TYPE}")
else()
    set(DETECTED_BUILD_TYPE ${DETECTED_BUILD_FOLDER})
    message("CMAKE_BUILD_TYPE not found, DETECTED_BUILD_TYPE=DETECTED_BUILD_FOLDER=${DETECTED_BUILD_TYPE}")
endif()

# check if python virtual environment exists
set(VENV_PATH ${CMAKE_CURRENT_SOURCE_DIR}/.venv)
if(IS_DIRECTORY ${VENV_PATH})
    message("python virtual environment found, VENV_PATH=${VENV_PATH}")
else()
    message(FATAL_ERROR "python virtual environment not found, VENV_PATH=${VENV_PATH}")
endif()
if(WIN32)
    set(VENV_ACTIVATE_CMD ".venv\\Scripts\\activate")
else()
    set(VENV_ACTIVATE_CMD "source .venv/bin/activate")
endif()

# install conan dependencies
set(CONAN_INSTALL_CMD "conan install conanfile.txt -b missing -s build_type=${DETECTED_BUILD_TYPE} -if ${DETECTED_BUILD_FOLDER}")
if(WIN32)
    execute_process(COMMAND CMD /c "${VENV_ACTIVATE_CMD} && ${CONAN_INSTALL_CMD}" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
else()
    execute_process(COMMAND bash -c "${VENV_ACTIVATE_CMD} && ${CONAN_INSTALL_CMD}" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
endif()

# enable testing support (make test)
enable_testing()
